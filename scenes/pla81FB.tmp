[gd_scene load_steps=9 format=3 uid="uid://bx0oqtvk82pyq"]

[ext_resource type="PackedScene" uid="uid://dky8yw3o6btlp" path="res://scenes/camera_2d.tscn" id="1_vcxn7"]
[ext_resource type="Texture2D" uid="uid://bg2nsltc383m6" path="res://assets/Sprite-0001-Sheet.png" id="2_qw56i"]

[sub_resource type="GDScript" id="GDScript_5cdeg"]
resource_name = "player"
script/source = "extends CharacterBody2D


@export var SPEED = 150.0
@export var JUMP_VELOCITY = -200.0
@export var ACCEL_TIME: float = 4.0
@export var BREAK_FACTOR: float = 5.0
@export var GRAVITY_MULTIPLIER: float = 1.5
@export var TERMINAL_VELOCITY_MULTIPLIER: float = 1.5
@export var GRADUAL_JUMP_MULTIPLIER: float = 0.25
@export var SQUISH_FACTOR: float = 0.175
@export var COYOTE_MAX_TIME: float = 0.5

@onready var sprite: AnimatedSprite2D = $PlayerAnimatedSprite2D

var ACCEL = SPEED / ACCEL_TIME
# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/2d/default_gravity\")

func _physics_process(delta):
	var is_coyote_time: bool
	var coyote_time: float 
	print(coyote_time, is_coyote_time)
	# Add the gravity.
	if is_on_floor():
		is_coyote_time = true
	if not is_on_floor():
		coyote_time += delta
		if coyote_time > COYOTE_MAX_TIME:
			is_coyote_time = false
			coyote_time = 0.0
		velocity.y += gravity * delta
		if velocity.y >= 0:
			velocity.y += gravity * delta * GRAVITY_MULTIPLIER
	print(coyote_time)
	# How to implement different gravity in an arc shape?
	# the player has a position Y, when they jump, Y increases
	# at one point, Y reaches the maximum
	# immediately after, y starts to decrease according to the gravity setting
	# therefore, I need to identify the point when Y is max
	# and decrease Y faster starting with that point and ending with touching the floor
	
		# Solution: velocity.y is always negative while going up, and then positive while falling
			
	# Terminal velocity while falling
	velocity.y = clamp(velocity.y, JUMP_VELOCITY, -JUMP_VELOCITY * TERMINAL_VELOCITY_MULTIPLIER)

	# Handle jump.
	if Input.is_action_just_pressed(\"ui_accept\") and (is_on_floor() or is_coyote_time):
		_squish_sprite(sprite)
		velocity.y = JUMP_VELOCITY
	
	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var direction = Input.get_axis(\"ui_left\", \"ui_right\")
	
	if direction:
		# Acceleration
		velocity.x = move_toward(velocity.x, SPEED, ACCEL * direction)
		velocity.x = clamp(velocity.x, -SPEED, SPEED)
	else:
		# Deceleration
		velocity.x = move_toward(velocity.x, 0, SPEED / BREAK_FACTOR)

	move_and_slide()

# Squish sprite when jumping
func _squish_sprite(sprite):
	sprite.scale.x = move_toward(sprite.scale.x, sprite.scale.x + SQUISH_FACTOR, SQUISH_FACTOR)
	sprite.scale.y = move_toward(sprite.scale.y, sprite.scale.y - SQUISH_FACTOR, SQUISH_FACTOR)
	await get_tree().create_timer(0.1).timeout
	sprite.scale.x = move_toward(sprite.scale.x, 1, SQUISH_FACTOR)
	sprite.scale.y = move_toward(sprite.scale.y, 1, SQUISH_FACTOR)
		
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_6l5xa"]

[sub_resource type="GDScript" id="GDScript_tndti"]
resource_name = "camera_2d"
script/source = "extends Camera2D

# Called when the node enters the scene tree for the first time.
func _ready():
	pass

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	pass
	#align()
"

[sub_resource type="AtlasTexture" id="AtlasTexture_ew3ru"]
atlas = ExtResource("2_qw56i")
region = Rect2(0, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_f8kgs"]
atlas = ExtResource("2_qw56i")
region = Rect2(32, 0, 32, 32)

[sub_resource type="SpriteFrames" id="SpriteFrames_7kjki"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_ew3ru")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_f8kgs")
}],
"loop": false,
"name": &"new_animation",
"speed": 5.0
}]

[node name="Player" type="Node2D"]

[node name="CharacterBody2D" type="CharacterBody2D" parent="."]
script = SubResource("GDScript_5cdeg")
SPEED = 350.0
JUMP_VELOCITY = -400.0

[node name="CollisionShape2D" type="CollisionShape2D" parent="CharacterBody2D"]
shape = SubResource("RectangleShape2D_6l5xa")

[node name="Camera2D" parent="CharacterBody2D" instance=ExtResource("1_vcxn7")]
offset = Vector2(0, -69.125)
zoom = Vector2(1.91, 2.414)
position_smoothing_speed = 10.0
script = SubResource("GDScript_tndti")

[node name="PlayerAnimatedSprite2D" type="AnimatedSprite2D" parent="CharacterBody2D"]
texture_filter = 3
position = Vector2(0, -4.795)
sprite_frames = SubResource("SpriteFrames_7kjki")
animation = &"new_animation"
autoplay = "new_animation"
frame = 1
frame_progress = 1.0
